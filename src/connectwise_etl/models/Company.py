# generated by datamodel-codegen:
#   filename:  PSA_OpenAPI_schema.json

from __future__ import annotations

from datetime import datetime
from typing import Annotated
from uuid import UUID

from pydantic import Field
from sparkdantic import SparkModel

from . import (
    CompanyReference,
    CompanyTypeReference,
    ConfigurationQuestion,
    ConfigurationStatusReference,
    ConfigurationTypeReference,
    ContactReference,
    ContactTypeReference,
    CustomFieldValue,
    ManufacturerReference,
    MemberReference,
    SiteReference,
    SLAReference,
    SystemDepartmentReference,
    SystemLocationReference,
)


class CompanyTypeAssociation(SparkModel):
    id: int | None
    type: CompanyTypeReference
    company: CompanyReference
    field_info: Annotated[dict[str, str] | None, Field(alias='_info')]


class Configuration(SparkModel):
    id: int | None
    name: Annotated[str, Field(description=' Max length: 100;')]
    type: ConfigurationTypeReference
    status: ConfigurationStatusReference | None
    company: CompanyReference
    contact: ContactReference | None
    site: SiteReference | None
    locationId: int | None
    location: SystemLocationReference | None
    businessUnitId: int | None
    department: SystemDepartmentReference | None
    deviceIdentifier: Annotated[str | None, Field(description=' Max length: 100;')]
    serialNumber: Annotated[str | None, Field(description=' Max length: 250;')]
    modelNumber: Annotated[str | None, Field(description=' Max length: 50;')]
    tagNumber: Annotated[str | None, Field(description=' Max length: 50;')]
    purchaseDate: datetime | None
    installationDate: datetime | None
    installedBy: MemberReference | None
    warrantyExpirationDate: datetime | None
    vendorNotes: str | None
    notes: str | None
    macAddress: Annotated[str | None, Field(description=' Max length: 25;')]
    lastLoginName: Annotated[str | None, Field(description=' Max length: 100;')]
    billFlag: bool | None
    backupSuccesses: int | None
    backupIncomplete: int | None
    backupFailed: int | None
    backupRestores: int | None
    lastBackupDate: datetime | None
    backupServerName: Annotated[str | None, Field(description=' Max length: 50;')]
    backupBillableSpaceGb: float | None
    backupProtectedDeviceList: str | None
    backupYear: int | None
    backupMonth: int | None
    ipAddress: Annotated[str | None, Field(description=' Max length: 50;')]
    defaultGateway: Annotated[str | None, Field(description=' Max length: 50;')]
    osType: Annotated[str | None, Field(description=' Max length: 250;')]
    osInfo: Annotated[str | None, Field(description=' Max length: 250;')]
    cpuSpeed: Annotated[str | None, Field(description=' Max length: 100;')]
    ram: Annotated[str | None, Field(description=' Max length: 25;')]
    localHardDrives: str | None
    parentConfigurationId: int | None
    vendor: CompanyReference | None
    manufacturer: ManufacturerReference | None
    questions: list[ConfigurationQuestion] | None
    activeFlag: bool | None
    managementLink: Annotated[str | None, Field(description=' Max length: 1000;')]
    remoteLink: Annotated[str | None, Field(description=' Max length: 1000;')]
    sla: SLAReference | None
    mobileGuid: UUID | None
    displayVendorFlag: bool | None
    companyLocationId: int | None
    showRemoteFlag: bool | None
    showAutomateFlag: bool | None
    needsRenewalFlag: bool | None
    manufacturerPartNumber: Annotated[str | None, Field(description=' Max length: 50;')]
    field_info: Annotated[dict[str, str] | None, Field(alias='_info')]
    customFields: list[CustomFieldValue] | None


class ContactTypeAssociation(SparkModel):
    id: int | None
    type: ContactTypeReference
    contact: ContactReference
    field_info: Annotated[dict[str, str] | None, Field(alias='_info')]
